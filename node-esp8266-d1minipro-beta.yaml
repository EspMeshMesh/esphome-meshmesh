substitutions:
  meshmesh_channel: 3
  remote_node_addr: 0x7560D3
  remote_hash: 0x0000

external_components:
  - source: github://EspMeshMesh/esphome-meshmesh@main
    components: [meshmesh, meshmesh_direct, network, socket, esphome]

preferences:
    flash_write_interval: 30sec

esphome:
  name: mm-beta
  friendly_name: MM Beta
  comment: MeshMeshGo

esp8266:
  board: d1_mini_lite
  restore_from_flash : True
  framework:
    version: 3.1.2

logger:
  level: VERY_VERBOSE
  baud_rate: 115200

api:
  reboot_timeout: 900s

ota:
  platform: esphome
  port: 3232

mdns:
  disabled: true

socket:
  implementation: meshmesh_esp8266

meshmesh:
  baud_rate: 0
  rx_buffer_size: 0
  tx_buffer_size: 0
  password: !secret meshmesh_password
  channel: $meshmesh_channel

meshmesh_direct:
  id: meshmesh_direct_id
  on_receive:
    then:
      - lambda: |-
            ESP_LOGD("lambda", "on_receive %06X data %s", from,  format_hex_pretty(data, size).c_str());

packet_transport:
  platform: meshmesh
  update_interval: 5s
  address: 0x000000

switch:
  - platform: gpio
    id: physical_switch
    name: Physical switch
    pin:
      number: GPIO2
      inverted: true
    on_state:
      then:
        - lambda: id(meshmesh_direct_id)->publishRemoteSwitchState(${remote_node_addr}, ${remote_hash}, x);

binary_sensor:
  - platform: gpio
    pin: GPIO0
    name: Flash Button
    filters:
      - invert
    on_press:
      then:
        - lambda: id(physical_switch)->toggle();
        - meshmesh_direct.send:
            data: "Toggle button pressed"
            address: ${remote_node_addr}

